@using Microsoft.EntityFrameworkCore

@inject AppDbContext dbContext

@{
    ViewData["Title"] = "Thông tin DB";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_Connect = dbContext.Database.CanConnect();

    dbContext.Database.GetPendingMigrations();
    dbContext.Database.GetAppliedMigrations(); // lấy các thông tin về migation và đều trả về chuỗi
}

<partial name="_AlertMessage" />

<h1>Thong tin ve csdl</h1>
<p>- Database: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>

<hr>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations()){
    <p>
        @migration
    </p>
}

@foreach (var migration in dbContext.Database.GetPendingMigrations()){
    <p>
        @migration (pedding)
    </p>
}

@if(dbContext.Database.GetPendingMigrations().Any()) {
    <form method="post">
        <button class="btn btn-danger" asp-action="Migrate">
            Tạo DB (cập nhật Migrations)
        </button>
    </form>
}

@if(!can_Connect){
    <p class="alert alert-danger">
        không có khả năng kết nối đến Database
    </p>
}else {
    <h2>
        Các bảng
    </h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");

    <ul>
        @foreach (System.Data.DataRow row in table.Rows){
            <li>
                @row["TABLE_NAME"]
            </li>
        }
    </ul>
    <a class="btn btn-danger" asp-action="DeleteDb">
        Xóa Database: @dbName
    </a>
}